#!/bin/bash

# Directory to save JSON files
DATA_DIR="pokemon_data"
mkdir -p "$DATA_DIR"

# List of Pokémon to fetch
POKEMON_LIST=(Bulbasaur Ivysaur Venusaur Charmander Charmeleon)

# Function to fetch Pokémon data with retries and error handling
fetch_pokemon() {
  local pokemon=$(echo "$1" | tr '[:upper:]' '[:lower:]')  # lowercase for API
  local url="https://pokeapi.co/api/v2/pokemon/$pokemon"
  local output_file="$DATA_DIR/${pokemon}.json"
  local max_retries=3
  local count=0
  local success=0

  echo "Fetching data for $pokemon..."

  while [ $count -lt $max_retries ]; do
    # Perform API request
    if curl -s "$url" -o "$output_file"; then
      echo "Saved data to $output_file ✅"
      success=1
      break
    else
      echo "Failed to fetch $pokemon, retrying... ($((count+1))/$max_retries)"
      ((count++))
      sleep 1
    fi
  done

  if [ $success -ne 1 ]; then
    echo "Failed to fetch data for $pokemon after $max_retries attempts." >> errors.txt
  fi
}

# Launch fetches in background for parallelism
for pokemon in "${POKEMON_LIST[@]}"; do
  fetch_pokemon "$pokemon" &
done

# Show all background jobs
jobs

# Wait for all background jobs to finish
wait

echo "All Pokémon data fetched."
