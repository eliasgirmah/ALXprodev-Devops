#!/bin/bash

DATA_DIR="pokemon_data"
mkdir -p "$DATA_DIR"

POKEMON_LIST=(Bulbasaur Ivysaur Venusaur Charmander Charmeleon)

fetch_pokemon() {
  local pokemon=$(echo "$1" | tr '[:upper:]' '[:lower:]')
  local url="https://pokeapi.co/api/v2/pokemon/$pokemon"
  local output_file="$DATA_DIR/${pokemon}.json"
  local max_retries=3
  local count=0
  local success=0

  echo "Fetching data for $pokemon..."

  while [ $count -lt $max_retries ]; do
    if curl -s "$url" -o "$output_file"; then
      echo "Saved data to $output_file ✅"
      success=1
      break
    else
      echo "Failed to fetch $pokemon, retrying... ($((count+1))/$max_retries)"
      ((count++))
      sleep 1
    fi
  done

  if [ $success -ne 1 ]; then
    echo "Failed to fetch data for $pokemon after $max_retries attempts." >> errors.txt
  fi
}

pids=()

# Start fetches in background and store pids
for pokemon in "${POKEMON_LIST[@]}"; do
  fetch_pokemon "$pokemon" &
  pids+=($!)
done

# Wait for background jobs with timeout and kill if needed
for pid in "${pids[@]}"; do
  # Wait up to 10 seconds for each process, then kill if still running
  timeout 10 wait $pid
  if kill -0 $pid 2>/dev/null; then
    echo "Process $pid is taking too long, killing..."
    kill $pid
  fi
done

echo "All Pokémon data fetched or failed."
